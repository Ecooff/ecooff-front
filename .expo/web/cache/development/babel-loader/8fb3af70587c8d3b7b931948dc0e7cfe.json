{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AntDesign, MaterialIcons } from \"@expo/vector-icons\";\nimport globalStyles from \"../../styles/styles\";\nimport authStyles from \"../../styles/authStyles\";\nimport { useNavigation } from \"@react-navigation/native\";\n{}\nimport { AuthMenuComponent } from \"../../components\";\nimport { AuthService } from \"../../services\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignupScreen = function SignupScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      repetePassword = _useState10[0],\n      setRepetePassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loader = _useState12[0],\n      setLoader = _useState12[1];\n\n  var navigator = useNavigation();\n\n  var signUp = function signUp() {\n    setLoader(true);\n    var newUser = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    };\n\n    if (password === repetePassword) {\n      AuthService.signUp(newUser).then(function (response) {\n        console.log(\"checking response-->\", response);\n\n        if (response.message) {\n          createAlert(response.message);\n        } else {\n          navigator.navigate(\"ValidateUser\");\n        }\n      });\n    } else {\n      createAlert(\"Las contrase√±as no coinciden\");\n    }\n\n    setLoader(false);\n  };\n\n  var createAlert = function createAlert(message) {\n    return Alert.alert(\"Verifica los datos\", message, [{\n      text: \"OK\",\n      onPress: function onPress() {\n        return console.log();\n      }\n    }]);\n  };\n\n  return _jsx(ScrollView, {\n    style: [globalStyles.widthFluid],\n    children: _jsxs(KeyboardAvoidingView, {\n      style: [globalStyles.scrollContainer, styles.scrollContainer],\n      behavior: \"padding\",\n      keyboardVerticalOffset: 100,\n      children: [_jsxs(View, {\n        style: [styles.arrowSpace, globalStyles.arrowContainer, globalStyles.row, globalStyles.alignItemsCenter],\n        children: [_jsx(TouchableOpacity, {\n          onPress: navigator.goBack,\n          style: globalStyles.backArrow,\n          children: _jsx(MaterialIcons, {\n            name: \"arrow-back-ios\",\n            style: globalStyles.arrow\n          })\n        }), _jsx(Image, {\n          style: [authStyles.logoInline, globalStyles.menuLogo],\n          source: require(\"../../assets/icon-long.png\")\n        })]\n      }), _jsxs(View, {\n        style: authStyles.titleContainer,\n        children: [_jsx(Text, {\n          style: [authStyles.title, globalStyles.fontLarge],\n          children: \"Registro\"\n        }), _jsx(Text, {\n          style: [authStyles.subTitle, globalStyles.fontMedium],\n          children: \"Crea tu cuenta\"\n        })]\n      }), _jsxs(View, {\n        style: globalStyles.widthEightyFive,\n        children: [_jsx(Text, {\n          style: [globalStyles.inputLabel, globalStyles.fontSmall],\n          children: \"NOMBRE Y APELLIDO\"\n        }), _jsxs(View, {\n          style: styles.inputColsContainter,\n          children: [_jsxs(View, {\n            style: styles.inputCols,\n            children: [_jsx(AntDesign, {\n              name: \"user\",\n              style: globalStyles.icons\n            }), _jsx(TextInput, {\n              placeholder: \"Nombre\",\n              value: firstName,\n              keyboardType: \"email-address\",\n              icon: \"mail\",\n              onChangeText: function onChangeText(text) {\n                return setFirstName(text);\n              },\n              style: globalStyles.input\n            })]\n          }), _jsx(View, {\n            style: styles.inputCols,\n            children: _jsx(TextInput, {\n              placeholder: \"Apellido\",\n              value: lastName,\n              keyboardType: \"email-address\",\n              icon: \"mail\",\n              onChangeText: function onChangeText(text) {\n                return setLastName(text);\n              },\n              style: globalStyles.input\n            })\n          })]\n        }), _jsx(Text, {\n          style: [globalStyles.inputLabel, globalStyles.fontSmall],\n          children: \"EMAIL\"\n        }), _jsxs(View, {\n          style: globalStyles.inputRow,\n          children: [_jsx(AntDesign, {\n            name: \"mail\",\n            style: globalStyles.icons\n          }), _jsx(TextInput, {\n            placeholder: \"Email\",\n            value: email,\n            keyboardType: \"email-address\",\n            icon: \"mail\",\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            },\n            style: globalStyles.input\n          })]\n        }), _jsx(Text, {\n          style: [globalStyles.inputLabel, globalStyles.fontSmall],\n          children: \"CONTRASE\\xD1A\"\n        }), _jsxs(View, {\n          style: globalStyles.inputRow,\n          children: [_jsx(AntDesign, {\n            name: \"lock\",\n            style: globalStyles.icons\n          }), _jsx(TextInput, {\n            placeholder: \"Contrase\\xF1a\",\n            value: password,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            style: globalStyles.input,\n            secureTextEntry: true\n          })]\n        }), _jsx(Text, {\n          style: [globalStyles.inputLabel, globalStyles.fontSmall],\n          children: \"REPETIR CONTRASE\\xD1A\"\n        }), _jsxs(View, {\n          style: globalStyles.inputRow,\n          children: [_jsx(AntDesign, {\n            name: \"lock\",\n            style: globalStyles.icons\n          }), _jsx(TextInput, {\n            placeholder: \"Repet\\xED tu contrase\\xF1a\",\n            value: repetePassword,\n            onChangeText: function onChangeText(text) {\n              return setRepetePassword(text);\n            },\n            style: globalStyles.input,\n            secureTextEntry: true\n          })]\n        })]\n      }), _jsx(View, {\n        style: [authStyles.buttonContainer, globalStyles.widthEightyFive],\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return signUp();\n          },\n          style: [globalStyles.button, globalStyles.primary, globalStyles.widthFluid],\n          children: loader == false < 2 ? _jsx(View, {\n            style: [globalStyles.container, globalStyles.horizontal],\n            children: _jsx(ActivityIndicator, {\n              size: \"small\",\n              color: \"#FFF\"\n            })\n          }) : _jsx(Text, {\n            style: [styles.loginText, globalStyles.textWhite],\n            children: \"Resgistrarme\"\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigator.navigate(\"Login\");\n        },\n        style: [styles.finalLabel, authStyles.registerContainter],\n        children: _jsxs(Text, {\n          style: [authStyles.headerTitle, globalStyles.fontSmall],\n          children: [\"\\xBFYa ten\\xE9s cuenta?\", _jsx(Text, {\n            style: globalStyles.fontBold,\n            children: \" Inicia sesi\\xF3n\"\n          })]\n        })\n      })]\n    })\n  });\n};\n\nexport default SignupScreen;\nvar styles = StyleSheet.create({\n  scrollContainer: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  arrowSpace: {\n    marginBottom: 40\n  },\n  inputColsContainter: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  inputCols: {\n    width: \"48%\",\n    flexDirection: \"row\",\n    backgroundColor: \"#F9FAFB\",\n    borderRadius: 3,\n    marginBottom: 25,\n    alignItems: \"center\"\n  },\n  finalLabel: {\n    marginBottom: 40\n  },\n  loginText: {\n    paddingVertical: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Valen/Desktop/ecooff-front/screens/Auth/SignupScreen.js"],"names":["React","useState","AntDesign","MaterialIcons","globalStyles","authStyles","useNavigation","AuthMenuComponent","AuthService","axios","SignupScreen","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","repetePassword","setRepetePassword","loader","setLoader","navigator","signUp","newUser","then","response","console","log","message","createAlert","navigate","Alert","alert","text","onPress","widthFluid","scrollContainer","styles","arrowSpace","arrowContainer","row","alignItemsCenter","goBack","backArrow","arrow","logoInline","menuLogo","require","titleContainer","title","fontLarge","subTitle","fontMedium","widthEightyFive","inputLabel","fontSmall","inputColsContainter","inputCols","icons","input","inputRow","buttonContainer","button","primary","container","horizontal","loginText","textWhite","finalLabel","registerContainter","headerTitle","fontBold","StyleSheet","create","flex","flexDirection","marginBottom","width","justifyContent","backgroundColor","borderRadius","alignItems","paddingVertical"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Image,\r\n  ActivityIndicator,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { AntDesign, MaterialIcons } from \"@expo/vector-icons\";\r\nimport globalStyles from \"../../styles/styles\";\r\nimport authStyles from \"../../styles/authStyles\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\n{\r\n  /* COMPONENTS */\r\n}\r\nimport { AuthMenuComponent } from \"../../components\";\r\n\r\n// SERVICES\r\nimport { AuthService } from \"../../services\";\r\nimport axios from \"axios\";\r\n\r\nconst SignupScreen = () => {\r\n//   const initialRouteName = \"Home\";\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repetePassword, setRepetePassword] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const navigator = useNavigation();\r\n\r\n  const signUp = () => {\r\n    setLoader(true);\r\n\r\n    let newUser = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    // axios\r\n\r\n    if (password === repetePassword) {\r\n      AuthService.signUp(newUser).then(response => {\r\n          console.log(\"checking response-->\",response)//tst\r\n        if (response.message) {\r\n          createAlert(response.message);\r\n        } else {\r\n          navigator.navigate(\"ValidateUser\");\r\n        }\r\n      });\r\n    } else {\r\n      createAlert(\"Las contrase√±as no coinciden\");\r\n    }\r\n\r\n    setLoader(false);\r\n  };\r\n\r\n  const createAlert = (message) =>\r\n    Alert.alert(\"Verifica los datos\", message, [\r\n      { text: \"OK\", onPress: () => console.log() },\r\n    ]);\r\n\r\n  return (\r\n    <ScrollView style={[globalStyles.widthFluid]}>\r\n      <KeyboardAvoidingView\r\n        style={[globalStyles.scrollContainer, styles.scrollContainer]}\r\n        behavior=\"padding\"\r\n        keyboardVerticalOffset={100}\r\n      >\r\n        {/* BACK ARROW */}\r\n        <View\r\n          style={[\r\n            styles.arrowSpace,\r\n            globalStyles.arrowContainer,\r\n            globalStyles.row,\r\n            globalStyles.alignItemsCenter,\r\n          ]}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={navigator.goBack}\r\n            style={globalStyles.backArrow}\r\n          >\r\n            <MaterialIcons name=\"arrow-back-ios\" style={globalStyles.arrow} />\r\n          </TouchableOpacity>\r\n\r\n          <Image\r\n            style={[authStyles.logoInline, globalStyles.menuLogo]}\r\n            source={require(\"../../assets/icon-long.png\")}\r\n          />\r\n        </View>\r\n\r\n        {/* WELCOME MESSAGE */}\r\n        <View style={authStyles.titleContainer}>\r\n          <Text style={[authStyles.title, globalStyles.fontLarge]}>\r\n            Registro\r\n          </Text>\r\n          <Text style={[authStyles.subTitle, globalStyles.fontMedium]}>\r\n            Crea tu cuenta\r\n          </Text>\r\n        </View>\r\n\r\n        {/* INPUTS */}\r\n        <View style={globalStyles.widthEightyFive}>\r\n          <Text style={[globalStyles.inputLabel, globalStyles.fontSmall]}>\r\n            NOMBRE Y APELLIDO\r\n          </Text>\r\n\r\n          <View style={styles.inputColsContainter}>\r\n            <View style={styles.inputCols}>\r\n              <AntDesign name=\"user\" style={globalStyles.icons} />\r\n              <TextInput\r\n                placeholder=\"Nombre\"\r\n                value={firstName}\r\n                keyboardType=\"email-address\"\r\n                icon=\"mail\"\r\n                onChangeText={(text) => setFirstName(text)}\r\n                style={globalStyles.input}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.inputCols}>\r\n              <TextInput\r\n                placeholder=\"Apellido\"\r\n                value={lastName}\r\n                keyboardType=\"email-address\"\r\n                icon=\"mail\"\r\n                onChangeText={(text) => setLastName(text)}\r\n                style={globalStyles.input}\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          <Text style={[globalStyles.inputLabel, globalStyles.fontSmall]}>\r\n            EMAIL\r\n          </Text>\r\n          <View style={globalStyles.inputRow}>\r\n            <AntDesign name=\"mail\" style={globalStyles.icons} />\r\n            <TextInput\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              keyboardType=\"email-address\"\r\n              icon=\"mail\"\r\n              onChangeText={(text) => setEmail(text)}\r\n              style={globalStyles.input}\r\n            />\r\n          </View>\r\n\r\n          <Text style={[globalStyles.inputLabel, globalStyles.fontSmall]}>\r\n            CONTRASE√ëA\r\n          </Text>\r\n          <View style={globalStyles.inputRow}>\r\n            <AntDesign name=\"lock\" style={globalStyles.icons} />\r\n            <TextInput\r\n              placeholder=\"Contrase√±a\"\r\n              value={password}\r\n              onChangeText={(text) => setPassword(text)}\r\n              style={globalStyles.input}\r\n              secureTextEntry\r\n            />\r\n          </View>\r\n\r\n          <Text style={[globalStyles.inputLabel, globalStyles.fontSmall]}>\r\n            REPETIR CONTRASE√ëA\r\n          </Text>\r\n          <View style={globalStyles.inputRow}>\r\n            <AntDesign name=\"lock\" style={globalStyles.icons} />\r\n            <TextInput\r\n              placeholder=\"Repet√≠ tu contrase√±a\"\r\n              value={repetePassword}\r\n              onChangeText={(text) => setRepetePassword(text)}\r\n              style={globalStyles.input}\r\n              secureTextEntry\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {/* BUTTONS */}\r\n        <View\r\n          style={[authStyles.buttonContainer, globalStyles.widthEightyFive]}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => signUp()}\r\n            // disabled={firstName != null && lastName != null && email != null && password != null && repetePassword != null && loader != null}\r\n            style={[\r\n              globalStyles.button,\r\n              globalStyles.primary,\r\n              globalStyles.widthFluid,\r\n            ]}\r\n          >\r\n            {loader == false < 2 ? (\r\n              <View style={[globalStyles.container, globalStyles.horizontal]}>\r\n                <ActivityIndicator size=\"small\" color=\"#FFF\" />\r\n              </View>\r\n            ) : (\r\n              <Text style={[styles.loginText, globalStyles.textWhite]}>\r\n                Resgistrarme\r\n              </Text>\r\n            )}\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* FINAL LABEL */}\r\n        <TouchableOpacity\r\n          onPress={() => navigator.navigate(\"Login\")}\r\n          style={[styles.finalLabel, authStyles.registerContainter]}\r\n        >\r\n          <Text style={[authStyles.headerTitle, globalStyles.fontSmall]}>\r\n            ¬øYa ten√©s cuenta?\r\n            <Text style={globalStyles.fontBold}> Inicia sesi√≥n</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </KeyboardAvoidingView>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default SignupScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollContainer: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  arrowSpace: {\r\n    marginBottom: 40,\r\n  },\r\n\r\n  inputColsContainter: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  inputCols: {\r\n    width: \"48%\",\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#F9FAFB\",\r\n    borderRadius: 3,\r\n    marginBottom: 25,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  finalLabel: {\r\n    marginBottom: 40,\r\n  },\r\n\r\n  loginText: {\r\n    paddingVertical: 1,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}