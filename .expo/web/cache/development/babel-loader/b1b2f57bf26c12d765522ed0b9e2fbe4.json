{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AntDesign, MaterialIcons } from '@expo/vector-icons';\nimport globalStyles from \"../../styles/styles\";\nimport authStyles from \"../../styles/authStyles\";\nimport { useNavigation } from '@react-navigation/native';\n{}\nimport { AuthMenuComponent } from \"../../components\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RestorePassword = function RestorePassword() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmPassword = _useState4[0],\n      setConfirmPassword = _useState4[1];\n\n  var navigator = useNavigation();\n\n  var setNewPassword = function setNewPassword() {\n    Alert.alert(\"Tu contrseña fué cambiada exitosamente\", 'Ahora podes iniciar sesión con tus nuevos datos de acceso actualizados.', [{\n      text: \"Iniciar sesión\",\n      onPress: function onPress() {\n        navigator.navigate('Login');\n      }\n    }]);\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: [globalStyles.scrollContainer],\n    behavior: \"padding\",\n    children: [_jsx(AuthMenuComponent, {}), _jsxs(View, {\n      style: authStyles.titleContainer,\n      children: [_jsx(Text, {\n        style: [authStyles.title, globalStyles.fontLarge],\n        children: \"Nueva contrase\\xF1a\"\n      }), _jsx(Text, {\n        style: [authStyles.subTitle, globalStyles.fontMedium],\n        children: \"Cre\\xE1 una segura y recordala...\"\n      })]\n    }), _jsxs(View, {\n      style: globalStyles.widthEightyFive,\n      children: [_jsx(Text, {\n        style: [globalStyles.inputLabel, globalStyles.fontSmall],\n        children: \"CONTRASE\\xD1A\"\n      }), _jsxs(View, {\n        style: globalStyles.inputRow,\n        children: [_jsx(AntDesign, {\n          name: \"lock\",\n          style: globalStyles.icons\n        }), _jsx(TextInput, {\n          placeholder: \"Contrase\\xF1a\",\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          },\n          style: globalStyles.input,\n          secureTextEntry: true\n        })]\n      }), _jsx(Text, {\n        style: [globalStyles.inputLabel, globalStyles.fontSmall],\n        children: \"REPETI LA CONTRASE\\xD1A\"\n      }), _jsxs(View, {\n        style: globalStyles.inputRow,\n        children: [_jsx(AntDesign, {\n          name: \"lock\",\n          style: globalStyles.icons\n        }), _jsx(TextInput, {\n          placeholder: \"Confirmaci\\xF3n de contrase\\xF1a\",\n          value: confirmPassword,\n          onChangeText: function onChangeText(text) {\n            return setConfirmPassword(text);\n          },\n          style: globalStyles.input,\n          secureTextEntry: true\n        })]\n      })]\n    }), _jsx(View, {\n      style: [styles.buttonSpace, authStyles.buttonContainer, globalStyles.widthEightyFive],\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setNewPassword();\n        },\n        style: [globalStyles.button, globalStyles.primary, globalStyles.widthFluid],\n        children: _jsx(Text, {\n          style: globalStyles.textWhite,\n          children: \"Establecer\"\n        })\n      })\n    })]\n  });\n};\n\nexport default RestorePassword;\nvar styles = StyleSheet.create({\n  arrowSpace: {\n    marginBottom: 50\n  },\n  buttonSpace: {\n    marginTop: 80\n  }\n});","map":{"version":3,"sources":["C:/Users/Valen/Desktop/ecooff-front/screens/Auth/RestorePassword.js"],"names":["React","useState","AntDesign","MaterialIcons","globalStyles","authStyles","useNavigation","AuthMenuComponent","RestorePassword","password","setPassword","confirmPassword","setConfirmPassword","navigator","setNewPassword","Alert","alert","text","onPress","navigate","scrollContainer","titleContainer","title","fontLarge","subTitle","fontMedium","widthEightyFive","inputLabel","fontSmall","inputRow","icons","input","styles","buttonSpace","buttonContainer","button","primary","widthFluid","textWhite","StyleSheet","create","arrowSpace","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { KeyboardAvoidingView, StyleSheet, Text, View, TextInput, TouchableOpacity, Alert, Image } from 'react-native';\r\nimport { AntDesign, MaterialIcons } from '@expo/vector-icons';\r\nimport globalStyles from '../../styles/styles';\r\nimport authStyles from '../../styles/authStyles';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n{/* COMPONENTS */}\r\nimport { AuthMenuComponent } from '../../components';\r\n\r\n\r\nconst RestorePassword = () => {\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const navigator = useNavigation();\r\n\r\n    const setNewPassword = () => {\r\n        Alert.alert(\r\n            \"Tu contrseña fué cambiada exitosamente\",\r\n            'Ahora podes iniciar sesión con tus nuevos datos de acceso actualizados.',\r\n            [\r\n                { text: \"Iniciar sesión\", onPress: () => { navigator.navigate('Login') } }\r\n            ]\r\n        )};\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            style={[globalStyles.scrollContainer]}\r\n            behavior=\"padding\"\r\n        >\r\n\r\n            {/* BACK ARROW */}\r\n            <AuthMenuComponent />\r\n\r\n            {/* WELCOME MESSAGE */}\r\n            <View\r\n                style={authStyles.titleContainer}\r\n            >\r\n\r\n                <Text style={[authStyles.title, globalStyles.fontLarge]}>Nueva contraseña</Text>\r\n                <Text style={[authStyles.subTitle, globalStyles.fontMedium]}>Creá una segura y recordala...</Text>\r\n\r\n            </View>\r\n\r\n            {/* INPUTS */}\r\n            <View\r\n                style={globalStyles.widthEightyFive}\r\n            >\r\n\r\n                <Text style={[globalStyles.inputLabel, globalStyles.fontSmall]}>CONTRASEÑA</Text>\r\n                <View style={globalStyles.inputRow}>\r\n                    <AntDesign name=\"lock\" style={globalStyles.icons} />\r\n                    <TextInput\r\n                        placeholder=\"Contraseña\"\r\n                        value={password}\r\n                        onChangeText={text => setPassword(text)}\r\n                        style={globalStyles.input}\r\n                        secureTextEntry\r\n                    />\r\n                </View>\r\n\r\n                <Text style={[globalStyles.inputLabel, globalStyles.fontSmall]}>REPETI LA CONTRASEÑA</Text>\r\n                <View style={globalStyles.inputRow}>\r\n                    <AntDesign name=\"lock\" style={globalStyles.icons} />\r\n                    <TextInput\r\n                        placeholder=\"Confirmación de contraseña\"\r\n                        value={confirmPassword}\r\n                        onChangeText={text => setConfirmPassword(text)}\r\n                        style={globalStyles.input}\r\n                        secureTextEntry\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n\r\n            {/* BUTTON */}\r\n            <View style={ [styles.buttonSpace, authStyles.buttonContainer, globalStyles.widthEightyFive] }>\r\n\r\n                <TouchableOpacity\r\n                    onPress={ () => setNewPassword() }\r\n                    style={[globalStyles.button, globalStyles.primary, globalStyles.widthFluid]}\r\n                >\r\n                    <Text style={globalStyles.textWhite}>Establecer</Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default RestorePassword\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    arrowSpace: {\r\n        marginBottom: 50\r\n    },\r\n\r\n    buttonSpace: {\r\n        marginTop: 80\r\n    },\r\n\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}