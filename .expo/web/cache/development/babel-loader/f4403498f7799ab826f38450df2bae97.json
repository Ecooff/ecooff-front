{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AntDesign, MaterialIcons } from \"@expo/vector-icons\";\nimport globalStyles from \"../../styles/styles\";\nimport authStyles from \"../../styles/authStyles\";\nimport { useNavigation } from \"@react-navigation/native\";\n{}\nimport { AuthMenuComponent } from \"../../components\";\nimport { borderColor } from \"react-native/Libraries/Components/View/ReactNativeStyleAttributes\";\nimport { localhost } from \"../../localhost.json\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ValidateUserScreen = function ValidateUserScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      code1 = _useState2[0],\n      setCode1 = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      code2 = _useState4[0],\n      setCode2 = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      code3 = _useState6[0],\n      setCode3 = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      code4 = _useState8[0],\n      setCode4 = _useState8[1];\n\n  var navigator = useNavigation();\n\n  var validateUser = function validateUser() {\n    var token = code1 + code2 + code3 + code4;\n    axios.post(\"http://\" + localhost + \"/api/users/verifyEmail\", token).then(function (_ref) {\n      var data = _ref.data;\n      console.log(\"dataa verifivation-->\", data);\n      navigator.navigate('Home');\n    }).catch(function (err) {\n      return console.log(\"sth was wrong\", err);\n    });\n  };\n\n  var createAlert = function createAlert() {\n    return Alert.alert(\"No encontrammos tu cuenta\", \"El mail que ingresaste parece no estar registrado. Revisrá que esté bien escribo o probá con otro diferente\", [{\n      text: \"OK\",\n      onPress: function onPress() {}\n    }]);\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: [globalStyles.scrollContainer],\n    behavior: \"padding\",\n    children: [_jsx(AuthMenuComponent, {}), _jsxs(View, {\n      style: authStyles.titleContainer,\n      children: [_jsx(Text, {\n        style: [authStyles.title, globalStyles.fontLarge],\n        children: \"Valida tu cuenta\"\n      }), _jsx(Text, {\n        style: [authStyles.subTitle, globalStyles.fontMedium],\n        children: \"Te enviamos un mail con el c\\xF3digo de verificaci\\xF3n\"\n      })]\n    }), _jsxs(View, {\n      style: globalStyles.widthEightyFive,\n      children: [_jsx(Text, {\n        style: [globalStyles.inputLabel, globalStyles.fontSmall],\n        children: \"C\\xF3digo\"\n      }), _jsxs(View, {\n        style: [styles.inputRow, globalStyles.justifyContentBetween],\n        children: [_jsx(TextInput, {\n          value: code1,\n          keyboardType: \"email-address\",\n          icon: \"mail\",\n          onChangeText: function onChangeText(text) {\n            return setCode1(text);\n          },\n          style: styles.codeInputs\n        }), _jsx(TextInput, {\n          value: code2,\n          keyboardType: \"email-address\",\n          icon: \"mail\",\n          onChangeText: function onChangeText(text) {\n            return setCode2(text);\n          },\n          style: styles.codeInputs\n        }), _jsx(TextInput, {\n          value: code3,\n          keyboardType: \"email-address\",\n          icon: \"mail\",\n          onChangeText: function onChangeText(text) {\n            return setCode3(text);\n          },\n          style: styles.codeInputs\n        }), _jsx(TextInput, {\n          value: code4,\n          keyboardType: \"email-address\",\n          icon: \"mail\",\n          onChangeText: function onChangeText(text) {\n            return setCode4(text);\n          },\n          style: styles.codeInputs\n        })]\n      })]\n    }), _jsx(View, {\n      style: [styles.buttonContainer, authStyles.buttonContainer, globalStyles.widthEightyFive],\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return validateUser();\n        },\n        style: [globalStyles.button, globalStyles.primary, globalStyles.widthFluid],\n        children: _jsx(Text, {\n          style: globalStyles.textWhite,\n          children: \"Validar\"\n        })\n      })\n    })]\n  });\n};\n\nexport default ValidateUserScreen;\nvar styles = StyleSheet.create({\n  arrowSpace: {\n    marginBottom: 30\n  },\n  buttonContainer: {\n    marginTop: 150\n  },\n  headerContainer: {\n    marginTop: 20\n  },\n  codeInputs: {\n    marginTop: 20\n  },\n  inputRow: {\n    flexDirection: \"row\",\n    marginBottom: 25,\n    alignItems: \"center\"\n  },\n  codeInputs: {\n    backgroundColor: \"#F9FAFB\",\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    textAlign: \"center\",\n    width: \"20%\",\n    borderWidth: 1,\n    borderColor: \"rgba(0, 0, 0, 0.15)\",\n    borderRadius: 3\n  }\n});","map":{"version":3,"sources":["C:/Users/Valen/Desktop/ecooff-front/screens/Auth/ValidateUserScreen.js"],"names":["React","useState","AntDesign","MaterialIcons","globalStyles","authStyles","useNavigation","AuthMenuComponent","borderColor","localhost","axios","ValidateUserScreen","code1","setCode1","code2","setCode2","code3","setCode3","code4","setCode4","navigator","validateUser","token","post","then","data","console","log","navigate","catch","err","createAlert","Alert","alert","text","onPress","scrollContainer","titleContainer","title","fontLarge","subTitle","fontMedium","widthEightyFive","inputLabel","fontSmall","styles","inputRow","justifyContentBetween","codeInputs","buttonContainer","button","primary","widthFluid","textWhite","StyleSheet","create","arrowSpace","marginBottom","marginTop","headerContainer","flexDirection","alignItems","backgroundColor","paddingHorizontal","paddingVertical","textAlign","width","borderWidth","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Image,\r\n} from \"react-native\";\r\nimport { AntDesign, MaterialIcons } from \"@expo/vector-icons\";\r\nimport globalStyles from \"../../styles/styles\";\r\nimport authStyles from \"../../styles/authStyles\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\n{\r\n  /* COMPONENTS */\r\n}\r\nimport { AuthMenuComponent } from \"../../components\";\r\nimport { borderColor } from \"react-native/Libraries/Components/View/ReactNativeStyleAttributes\";\r\nimport { localhost } from \"../../localhost.json\";\r\nimport axios from \"axios\";\r\n\r\nconst ValidateUserScreen = () => {\r\n  const [code1, setCode1] = useState(\"\");\r\n  const [code2, setCode2] = useState(\"\");\r\n  const [code3, setCode3] = useState(\"\");\r\n  const [code4, setCode4] = useState(\"\");\r\n  const navigator = useNavigation();\r\n\r\n  const validateUser = () => {\r\n    let token = code1 + code2 + code3 + code4;\r\n    axios.post(`http://${localhost}/api/users/verifyEmail`, token)\r\n        .then(({data}) => {\r\n            console.log(\"dataa verifivation-->\",data)\r\n            navigator.navigate('Home')\r\n        })\r\n        .catch((err) => console.log(\"sth was wrong\", err));\r\n  };\r\n\r\n  const createAlert = () =>\r\n    Alert.alert(\r\n      \"No encontrammos tu cuenta\",\r\n      \"El mail que ingresaste parece no estar registrado. Revisrá que esté bien escribo o probá con otro diferente\",\r\n      [{ text: \"OK\", onPress: () => {} }]\r\n    );\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={[globalStyles.scrollContainer]}\r\n      behavior=\"padding\"\r\n    >\r\n      {/* BACK ARROW */}\r\n      <AuthMenuComponent />\r\n\r\n      <View style={authStyles.titleContainer}>\r\n        <Text style={[authStyles.title, globalStyles.fontLarge]}>\r\n          Valida tu cuenta\r\n        </Text>\r\n        <Text style={[authStyles.subTitle, globalStyles.fontMedium]}>\r\n          Te enviamos un mail con el código de verificación\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={globalStyles.widthEightyFive}>\r\n        <Text style={[globalStyles.inputLabel, globalStyles.fontSmall]}>\r\n          Código\r\n        </Text>\r\n        <View style={[styles.inputRow, globalStyles.justifyContentBetween]}>\r\n          <TextInput\r\n            value={code1}\r\n            keyboardType=\"email-address\"\r\n            icon=\"mail\"\r\n            onChangeText={(text) => setCode1(text)}\r\n            style={styles.codeInputs}\r\n          />\r\n          <TextInput\r\n            value={code2}\r\n            keyboardType=\"email-address\"\r\n            icon=\"mail\"\r\n            onChangeText={(text) => setCode2(text)}\r\n            style={styles.codeInputs}\r\n          />\r\n          <TextInput\r\n            value={code3}\r\n            keyboardType=\"email-address\"\r\n            icon=\"mail\"\r\n            onChangeText={(text) => setCode3(text)}\r\n            style={styles.codeInputs}\r\n          />\r\n          <TextInput\r\n            value={code4}\r\n            keyboardType=\"email-address\"\r\n            icon=\"mail\"\r\n            onChangeText={(text) => setCode4(text)}\r\n            style={styles.codeInputs}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      <View\r\n        style={[\r\n          styles.buttonContainer,\r\n          authStyles.buttonContainer,\r\n          globalStyles.widthEightyFive,\r\n        ]}\r\n      >\r\n        <TouchableOpacity\r\n          onPress={() => validateUser()}\r\n          style={[\r\n            globalStyles.button,\r\n            globalStyles.primary,\r\n            globalStyles.widthFluid,\r\n          ]}\r\n        >\r\n          <Text style={globalStyles.textWhite}>Validar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nexport default ValidateUserScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  arrowSpace: {\r\n    marginBottom: 30,\r\n  },\r\n\r\n  buttonContainer: {\r\n    marginTop: 150,\r\n  },\r\n\r\n  headerContainer: {\r\n    marginTop: 20,\r\n  },\r\n\r\n  codeInputs: {\r\n    marginTop: 20,\r\n  },\r\n\r\n  inputRow: {\r\n    flexDirection: \"row\",\r\n    marginBottom: 25,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  codeInputs: {\r\n    backgroundColor: \"#F9FAFB\",\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 15,\r\n    textAlign: \"center\",\r\n    width: \"20%\",\r\n    borderWidth: 1,\r\n    borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n    borderRadius: 3,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}